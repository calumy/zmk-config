name: Main Update

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  id-token: write
  contents: read
  actions: read

jobs:
  pre_job:
    name: Skip checks
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
      paths_result: ${{ steps.skip_check.outputs.paths_result }}
    steps:
      - name: Check skip workflows
        id: skip_check
        uses: fkirc/skip-duplicate-actions@v5.3.1
        with:
          paths_filter: |
            generate_release:
              paths:
                - build.yml
                - "config/**"
            cache_standard_checks:
              paths:
                - requirements/lint.txt
                - .pre-commit-config.yaml

  next_tag:
    name: Get Next Tag
    needs: pre_job
    if: ${{ !fromJSON(needs.pre_job.outputs.paths_result).generate_release.should_skip }}
    runs-on: ubuntu-latest

    outputs:
      NEXT_VERSION: ${{ steps.get-next-version.outputs.CURRENT_VERSION }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.0

      - name: Set up Python
        id: setup_python
        uses: actions/setup-python@v4.7.0
        with:
          python-version: "3.11"
          check-latest: true

      - name: Pip Cache
        uses: actions/cache@v3
        id: python_cache
        with:
          path: |
            env
            ~/.cache/pip
          key: env-${{ steps.setup_python.outputs.python-version }}-v2-${{ hashFiles('requirements/release.txt') }}

      - name: Install release dependencies
        if: ${{ steps.python_cache.outputs.cache-hit != 'true' }}
        run: |
          python -m pip install virtualenv --disable-pip-version-check
          python -m virtualenv env
          env/bin/python -m pip install -r requirements/release.txt --disable-pip-version-check

      - name: Bump Version
        run: env/bin/python -m bumpver update --no-commit

      - name: Set BumpVer environment variables
        id: get-next-version
        run: env/bin/python -m bumpver show --env >> "$GITHUB_OUTPUT"

      - name: Print next version
        run: echo "Next version is ${{ steps.get-next-version.outputs.CURRENT_VERSION }}"

  build:
    name: Build Config
    needs: [pre_job, next_tag]
    if: ${{ !fromJSON(needs.pre_job.outputs.paths_result).generate_release.should_skip }}
    uses: zmkfirmware/zmk/.github/workflows/build-user-config.yml@main
    with:
      archive_name: ${{ needs.next_tag.outputs.NEXT_VERSION }}

  draw:
    name: Draw Keymaps
    needs: [pre_job, next_tag]
    if: ${{ !fromJSON(needs.pre_job.outputs.paths_result).generate_release.should_skip }}
    permissions:
      contents: write
    uses: caksoylar/keymap-drawer/.github/workflows/draw-zmk.yml@main
    with:
      output_folder: "assets"
      commit_message: "Update keymap images"

  generate_release:
    name: Generate Release
    needs: [pre_job, next_tag, build, draw]
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.0

      - name: Set up Python
        id: setup_python
        uses: actions/setup-python@v4.7.0
        with:
          python-version: "3.11"
          check-latest: true

      - name: Pip Cache
        uses: actions/cache@v3
        id: python_cache
        with:
          path: |
            env
            ~/.cache/pip
          key: env-${{ steps.setup_python.outputs.python-version }}-v2-${{ hashFiles('requirements/release.txt') }}

      - name: Install release dependencies
        if: ${{ steps.python_cache.outputs.cache-hit != 'true' }}
        run: |
          python -m pip install virtualenv --disable-pip-version-check
          python -m virtualenv env
          env/bin/python -m pip install -r requirements/release.txt --disable-pip-version-check

      - name: Set git credentials
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Pull latest changes
        run: git pull

      - name: Bump Version
        run: env/bin/python -m bumpver update

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ needs.next_tag.outputs.NEXT_VERSION }}

      - name: Create release
        uses: softprops/action-gh-release@v0.1.15
        with:
          files: |
            lily58_left-nice_nano_v2-zmk.uf2
            lily58_right-nice_nano_v2-zmk.uf2
          fail_on_unmatched_files: true
          generate_release_notes: true
          tag_name: ${{ needs.next_tag.outputs.NEXT_VERSION }}

  cache-standard-checks:
    name: Cache standard checks dependencies
    needs: pre_job
    if: ${{ !fromJSON(needs.pre_job.outputs.paths_result).cache_standard_checks.should_skip }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.0

      - name: Set up Python
        id: setup_python
        uses: actions/setup-python@v4.7.0
        with:
          python-version: "3.11"
          check-latest: true

      - name: Pip Cache
        uses: actions/cache@v3
        id: python_cache
        with:
          path: |
            env
            ~/.cache/pip
          key: env-${{ steps.setup_python.outputs.python-version }}-v2-${{ hashFiles('requirements/lint.txt') }}

      - name: Cache Pre-commit
        uses: actions/cache@v3
        id: pre_commit_cache
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-v2-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: |
            pre-commit-v2-

      - name: Install linting dependencies
        if: ${{ steps.python_cache.outputs.cache-hit != 'true' }}
        run: |
          python -m pip install --upgrade pip
          python -m pip install virtualenv
          python -m virtualenv env
          env/bin/python -m pip install -r requirements/lint.txt

      - name: Install pre-commit hooks
        if: ${{ steps.pre_commit_cache.outputs.cache-hit != 'true' }}
        run: env/bin/python -m pre_commit install --install-hooks
